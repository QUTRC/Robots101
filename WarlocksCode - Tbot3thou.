# Code to display picam as a video stream, does not save, is a raw feed. - Source code started: 4th Sept 2022 created by TheWarlock27
import cv2
import numpy as np
import time
import picamera #Picam info: The sensor itself has a native resolution of 5 megapixel, and has a fixed focus lens onboard. In terms of still images, the camera is capable of 2592 x 1944 pixel static images, and also supports 1080p @ 30fps, 720p @ 60fps and 640x480p 60/90 video recording.
from math import atan,sin,cos,pi,floor
import imutils
from picamera import Picamera, colour
from picamera.array import PiRGBArray

#-------------------------------------------------------------------------- Complete code: Picam Video Livefeed - By TheWarlock27
# Code to display picam as a video stream, does not save, is a raw feed. - Source code started: 4th Sept 2022 created by TheWarlock27

import cv2
import numpy as np
import time
import picamera #Picam info: The sensor itself has a native resolution of 5 megapixel, and has a fixed focus lens onboard. In terms of still images, the camera is capable of 2592 x 1944 pixel static images, and also supports 1080p @ 30fps, 720p @ 60fps and 640x480p 60/90 video recording.
from math import atan,sin,cos,pi,floor
import imutils
from picamera import PiCamera
from picamera.array import PiRGBArray

#camera = PiCamera()
cap = cv2.VideoCapture(0)
#camera.resolution = (1280, 720)
#time.sleep(2)

if (cap.isOpened()== False):  #Check if camera opened successfully
  print("Error opening video stream or file")

while(cap.isOpened()):   #Read until video is completed
  ret, frame = cap.read()   #Capture frame-by-frame
  if ret == True:
    cv2.imshow('Stream',frame)      # Display the resulting frame
    print ("streaming")
    if cv2.waitKey(25) & 0xFF == ord('q'):      # Press lowercase Q on keyboard to exit
        break
  else: 
    print("No Feed")
    break     #Break the loop

cap.release()  # When everything done, release the video capture object
cv2.destroyAllWindows()  # Closes all the frames



#----------------------------------------------------------------------------- #takes a picture and saves it

#Takes a picture and stores picture on computer file
from picamera import PiCamera
import cv2

camera = PiCamera()
rawCapture = PiRGBArray(camera)
camera.resolution = (2592, 1944)
time.sleep(200)
camera.capture(rawCapture, format="bgr")
stream = rawCapture.array
camera.capture("/home/qutrc/Desktop/Robots101/Warlock27/Robots101/img.jpg")  #This line saves the capture, Optional to do so.
print("Done.")

cv2.waitKey(0) 
cv2.destroyAllWindows() 

#-------------------------------------------------------------------------- Experimental Code. Incomplete. Inprogress.

#     # Our operations on the frame come here - line 16 should convert feed to greyscale.
#     # gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)     # Our operations on the frame come here
# 
#     # Display the resulting frame
#     cv2.imshow('RGB',gray)
#     #cv2.imshow('Orig_img',frame)             
#     #cv2.imshow('hsv_img' ,hsv_frame)
#     #cv2.imshow('binary', binary_image)
#     #cv2.imshow('filtered', filtered)
























































